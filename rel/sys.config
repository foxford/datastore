[
	{datastore, [
	]},
	{lager, [
		{error_logger_redirect, false}
	]},
	{exometer, [
		{predefined, [
			%% http
			{[datastore,pool,http], {
				function, erlang, length, [{'$call', ranch, procs, [httpd, '$dp']}],
				value, [acceptors, connections]
			}, []},
			{[datastore,request,http,duration], histogram, []},
			%% riak kv
			{[datastore,pool,kv_protobuf], {
				function, poolboy, status, [kv_protobuf],
				match, {'_',idle,'_',busy}
			}, []},
			%% riak s2
			{[datastore,pool,s2_http], {
				function, poolboy, status, [s2_http],
				match, {'_',idle,'_',busy}
			}, []},
			%% erlang vm
			{[datastore,memory], {
				function, erlang, memory, [],
				proplist, [total, processes, processes_used, system, atom, atom_used, binary, ets]
			}, []},
			{[datastore,io], {
				function, erlang, statistics, [io],
				match, {{'_',in},{'_',out}}
			}, []},
			{[datastore,system_info],
				{function, erlang, system_info, ['$dp'],
				value, [port_count,port_limit,process_count,process_limit,thread_pool_size]
			}, []}
		]},
		{report, [
			{subscribers, [
				%% http
				{exometer_report_statsd, [datastore,pool,http], acceptors, 10000, true},
				{exometer_report_statsd, [datastore,pool,http], connections, 10000, true},
				{exometer_report_statsd, [datastore,request,http,duration], max, 10000, true},
				{exometer_report_statsd, [datastore,request,http,duration], min, 10000, true},
				{exometer_report_statsd, [datastore,request,http,duration], mean, 10000, true},
				%% riak kv
				{exometer_report_statsd, [datastore,pool,kv_protobuf], idle, 10000, true},
				{exometer_report_statsd, [datastore,pool,kv_protobuf], busy, 10000, true},
				%% riak s2
				{exometer_report_statsd, [datastore,pool,s2_http], idle, 10000, true},
				{exometer_report_statsd, [datastore,pool,s2_http], busy, 10000, true},
				%% erlang vm
				{exometer_report_statsd, [datastore,memory], total, 10000, true},
				{exometer_report_statsd, [datastore,memory], processes, 10000, true},
				{exometer_report_statsd, [datastore,memory], processes_used, 10000, true},
				{exometer_report_statsd, [datastore,memory], system, 10000, true},
				{exometer_report_statsd, [datastore,memory], atom, 10000, true},
				{exometer_report_statsd, [datastore,memory], atom_used, 10000, true},
				{exometer_report_statsd, [datastore,memory], binary, 10000, true},
				{exometer_report_statsd, [datastore,memory], ets, 10000, true},
				{exometer_report_statsd, [datastore,io], in, 10000, true},
				{exometer_report_statsd, [datastore,io], out, 10000, true},
				{exometer_report_statsd, [datastore,system_info], port_count, 10000, true},
				{exometer_report_statsd, [datastore,system_info], port_limit, 60000, true},
				{exometer_report_statsd, [datastore,system_info], process_count, 10000, true},
				{exometer_report_statsd, [datastore,system_info], process_limit, 60000, true},
				{exometer_report_statsd, [datastore,system_info], thread_pool_size, 10000, true}
			]},
			{reporters, [
				{exometer_report_statsd, [
					{hostname, "localhost"},
					{port, 8125}
				]}
			]}
		]}
	]}
].
